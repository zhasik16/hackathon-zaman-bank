import logging
from typing import Dict, List, Any, Optional
from ..core.config import settings

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class IslamicAIService:
    def __init__(self):
        # Islamic Finance Knowledge Base
        self.islamic_principles = """
        –ü—Ä–∏–Ω—Ü–∏–ø—ã –∏—Å–ª–∞–º—Å–∫–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤:
        1. –ó–∞–ø—Ä–µ—Ç —Ä–∏–±–∞ (—Ä–æ—Å—Ç–æ–≤—â–∏—á–µ—Å—Ç–≤–∞, –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤)
        2. –ó–∞–ø—Ä–µ—Ç –≥–∞—Ä–∞—Ä–∞ (—á—Ä–µ–∑–º–µ—Ä–Ω–æ–π –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç–∏)
        3. –ó–∞–ø—Ä–µ—Ç –º–∞–π—Å–∏—Ä (–∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä)
        4. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —à–∞—Ä–∏–∞—Ç—É –≤–æ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö
        5. –†–µ–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        6. –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–µ–π –∏ —É–±—ã—Ç–∫–æ–≤
        
        –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:
        - –ú—É—Ä–∞–±–∞—Ö–∞ (–ø—Ä–æ–¥–∞–∂–∞ —Å –Ω–∞—Ü–µ–Ω–∫–æ–π)
        - –ú—É–¥–∞—Ä–∞–±–∞ (–ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø—Ä–∏–±—ã–ª–∏) 
        - –ú—É—à–∞—Ä–∞–∫–∞ (—Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ)
        - –ò–¥–∂–∞—Ä–∞ (–∞—Ä–µ–Ω–¥–∞)
        - –°–∞–ª–∞–º (–∞–≤–∞–Ω—Å–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞)
        - –ò—Å—Ç–∏—Å–Ω–∞ (–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ)
        
        –í–∞–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:
        - –ó–∞–∫—è—Ç - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (2.5% –æ—Ç —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π)
        - –°–∞–¥–∞–∫–∞ - –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        - –í–∞–∫–∞—Ñ - –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–Ω–¥
        - –¢–∞–≤–∞–∫–∫—É–ª—å - —É–ø–æ–≤–∞–Ω–∏–µ –Ω–∞ –ê–ª–ª–∞—Ö–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –º–µ—Ä
        """

    def get_ai_response(self, messages: List[Dict[str, str]], model: str = "gpt-4o-mini") -> str:
        """Mock –º–µ—Ç–æ–¥ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã"""
        user_message = messages[-1]["content"] if messages else ""
        system_prompt = messages[0]["content"] if len(messages) > 1 else ""
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ system prompt
        user_name = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        if "–ò–º—è:" in system_prompt:
            try:
                name_line = [line for line in system_prompt.split('\n') if '–ò–º—è:' in line][0]
                user_name = name_line.split('–ò–º—è:')[1].strip()
            except:
                pass
        
        return self.get_mock_response(user_message, {"username": user_name})

    def get_mock_response(self, user_message: str, user_context: Dict[str, Any] = None) -> str:
        """–£–ª—É—á—à–µ–Ω–Ω—ã–µ mock –æ—Ç–≤–µ—Ç—ã —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
        user_name = user_context.get('username', '–¥—Ä—É–≥') if user_context else '–¥—Ä—É–≥'
        monthly_income = user_context.get('monthly_income', 0)
        monthly_expenses = user_context.get('monthly_expenses', 0)
        goals = user_context.get('goals', [])
        age = user_context.get('age', 0)
        
        user_message_lower = user_message.lower()

        # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if any(word in user_message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '—Å–∞–ª–∞–º', '–∑–¥—Ä–∞–≤—Å—Ç–≤', '–Ω–∞—á–∞—Ç—å']):
            return f"–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {user_name}! üåô –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Zaman Bank. –í–∏–∂—É, –≤–∞—à –¥–æ—Ö–æ–¥ {monthly_income:,} ‚Ç∏ –≤ –º–µ—Å—è—Ü. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å –≤–∞—à–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏ –∏—Å–ª–∞–º–∞?"

        elif any(word in user_message_lower for word in ['—Ü–µ–ª—å', '–Ω–∞–∫–æ–ø–∏—Ç—å', '—Å–±–µ—Ä–µ–∂']):
            if goals:
                goals_text = ", ".join([goal.get('name', '—Ü–µ–ª—å') for goal in goals[:3]])
                total_goals_amount = sum(goal.get('target_amount', 0) for goal in goals)
                return f"""{user_name}, –æ—Ç–ª–∏—á–Ω–æ! –†–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –≤–∞—à–∏–º–∏ —Ü–µ–ª—è–º–∏: {goals_text}.

–û–±—â–∞—è —Å—É–º–º–∞ —Ü–µ–ª–µ–π: {total_goals_amount:,} ‚Ç∏
–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —ç—Ç–∏—Ö —Ü–µ–ª–µ–π –≤ —Ä–∞–º–∫–∞—Ö –∏—Å–ª–∞–º—Å–∫–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:

1. –°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç –ú—É–¥–∞—Ä–∞–±–∞ - –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π
2. –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ—Ç—á–∏—Å–ª–µ–Ω–∏—è {max(monthly_income * 0.2, total_goals_amount / 60):,.0f} ‚Ç∏/–º–µ—Å—è—Ü
3. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Ü–µ–ª–∏

–ö–∞–∫—É—é —Ü–µ–ª—å —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –ø–µ—Ä–≤–æ–π?"""
            else:
                return f"{user_name}, –¥–∞–≤–∞–π—Ç–µ –ø–æ—Å—Ç–∞–≤–∏–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏! –ö–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫–æ–ø–∏—Ç—å –∏ –∑–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫? –ü–æ–º–Ω–∏—Ç–µ - –≤ –∏—Å–ª–∞–º—Å–∫–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–∞—Ö –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –¥–æ–∑–≤–æ–ª–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."

        elif any(word in user_message_lower for word in ['—Å–æ–≤–µ—Ç', '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü', '—á—Ç–æ –¥–µ–ª–∞—Ç—å']):
            savings = monthly_income - monthly_expenses
            return f"""{user_name}, –≤–æ—Ç –º–æ–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å:

üìä –í–ê–® –§–ò–ù–ê–ù–°–û–í–´–ô –ü–†–û–§–ò–õ–¨:
‚Ä¢ –î–æ—Ö–æ–¥: {monthly_income:,} ‚Ç∏/–º–µ—Å—è—Ü
‚Ä¢ –†–∞—Å—Ö–æ–¥—ã: {monthly_expenses:,} ‚Ç∏/–º–µ—Å—è—Ü  
‚Ä¢ –°–±–µ—Ä–µ–∂–µ–Ω–∏—è: {savings:,} ‚Ç∏/–º–µ—Å—è—Ü

üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–õ–ê–ú–°–ö–ò–ú –§–ò–ù–ê–ù–°–ê–ú:

1. –ë–Æ–î–ñ–ï–¢–ò–†–û–í–ê–ù–ò–ï:
   - –û—Å–Ω–æ–≤–Ω—ã–µ –Ω—É–∂–¥—ã: {monthly_income * 0.5:,.0f} ‚Ç∏ ({monthly_expenses:,.0f} ‚Ç∏ —Ç–µ–∫—É—â–∏–µ)
   - –°–±–µ—Ä–µ–∂–µ–Ω–∏—è: {monthly_income * 0.2:,.0f} ‚Ç∏ ({savings:,.0f} ‚Ç∏ —Ç–µ–∫—É—â–∏–µ)
   - –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: {monthly_income * 0.15:,.0f} ‚Ç∏
   - –ó–∞–∫—è—Ç: {monthly_income * 0.025:,.0f} ‚Ç∏
   - –†–∞–∑–≤–∏—Ç–∏–µ: {monthly_income * 0.125:,.0f} ‚Ç∏

2. –°–ë–ï–†–ï–ñ–ï–ù–ò–Ø: –û—Ç–∫—Ä—ã—Ç—å —Å—á–µ—Ç –ú—É–¥–∞—Ä–∞–±–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–∏–±—ã–ª–∏

3. –ò–ù–í–ï–°–¢–ò–¶–ò–ò: –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ú—É—à–∞—Ä–∞–∫–∞ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞

4. –ë–õ–ê–ì–û–¢–í–û–†–ò–¢–ï–õ–¨–ù–û–°–¢–¨: –í—ã–¥–µ–ª—è—Ç—å 2.5% –æ—Ç —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π –Ω–∞ –∑–∞–∫—è—Ç"""

        elif any(word in user_message_lower for word in ['–∂–∏–ª—å–µ', '–∫–≤–∞—Ä—Ç–∏—Ä', '–¥–æ–º']):
            housing_goal = next((goal for goal in goals if goal.get('category') == 'housing'), None)
            if housing_goal:
                target = housing_goal.get('target_amount', 0)
                timeline = housing_goal.get('timeline_months', 60)
                monthly_saving = target / timeline if timeline > 0 else 0
                return f"""{user_name}, –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∂–∏–ª—å—è –∑–∞ {target:,} ‚Ç∏:

üìÖ –ü–õ–ê–ù –ù–ê {timeline} –ú–ï–°–Ø–¶–ï–í:
‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è: {monthly_saving:,.0f} ‚Ç∏
‚Ä¢ –≠—Ç–æ {monthly_saving/monthly_income*100:.1f}% –æ—Ç –≤–∞—à–µ–≥–æ –¥–æ—Ö–æ–¥–∞

üè† –ò–°–õ–ê–ú–°–ö–ò–ï –†–ï–®–ï–ù–ò–Ø:
1. –ú—É—Ä–∞–±–∞—Ö–∞ –ñ–∏–ª—å–µ - —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
2. –ü–æ—ç—Ç–∞–ø–Ω–æ–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ú—É–¥–∞—Ä–∞–±–∞
3. –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ–º (–ú—É—à–∞—Ä–∞–∫–∞)

–†–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞—á–∞—Ç—å —Å {max(monthly_income * 0.15, monthly_saving):,.0f} ‚Ç∏/–º–µ—Å—è—Ü"""
            else:
                return f"{user_name}, –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∂–∏–ª—å—è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É '–ú—É—Ä–∞–±–∞—Ö–∞ –ñ–∏–ª—å–µ' - —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤. –ö–∞–∫–∞—è —Å—É–º–º–∞ –≤–∞–º –Ω—É–∂–Ω–∞ –∏ –∑–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ–∫—É–ø–∫—É?"

        elif any(word in user_message_lower for word in ['—Ö–∞–¥–∂', '—É–º—Ä–∞', '–º–µ–∫–∫']):
            hajj_goal = next((goal for goal in goals if goal.get('category') == 'hajj'), None)
            if hajj_goal:
                target = hajj_goal.get('target_amount', 1500000)
                timeline = hajj_goal.get('timeline_months', 24)
                monthly_saving = target / timeline if timeline > 0 else 0
                return f"""{user_name}, –¥–ª—è –±–ª–∞–≥–æ—Ä–æ–¥–Ω–æ–π —Ü–µ–ª–∏ –•–∞–¥–∂–∞:

üéØ –¶–ï–õ–¨: {target:,} ‚Ç∏ –∑–∞ {timeline} –º–µ—Å—è—Ü–µ–≤
‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω–æ: {monthly_saving:,.0f} ‚Ç∏
‚Ä¢ –≠—Ç–æ {monthly_saving/monthly_income*100:.1f}% –æ—Ç –¥–æ—Ö–æ–¥–∞

üïå –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
1. –û—Ç–∫—Ä—ã—Ç—å —Ü–µ–ª–µ–≤–æ–π —Å—á–µ—Ç –ú—É–¥–∞—Ä–∞–±–∞
2. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã
3. –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞
4. –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏

–ò–Ω—à–∞–ê–ª–ª–∞—Ö, –≤–∞—à–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç–æ!"""
            else:
                return f"{user_name}, –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –Ω–∞ –•–∞–¥–∂ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞—á–∞—Ç—å —Å {max(62500, monthly_income * 0.15):,.0f} ‚Ç∏ –≤ –º–µ—Å—è—Ü. –≠—Ç–æ –±–ª–∞–≥–æ—Ä–æ–¥–Ω–∞—è —Ü–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–µ–±—É–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –•–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —ç—Ç—É —Ü–µ–ª—å?"

        elif any(word in user_message_lower for word in ['—ç–∫–æ–Ω–æ–º–∏—è', '—Ç—Ä–∞—Ç—ã', '—Ä–∞—Å—Ö–æ–¥—ã', '—Å—ç–∫–æ–Ω–æ–º–∏—Ç—å']):
            potential_savings = monthly_expenses * 0.15  # 15% –æ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å
            return f"""{user_name}, –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ {monthly_expenses:,} ‚Ç∏/–º–µ—Å—è—Ü:

üí° –ü–û–¢–ï–ù–¶–ò–ê–õ –≠–ö–û–ù–û–ú–ò–ò: {potential_savings:,.0f} ‚Ç∏/–º–µ—Å—è—Ü

üéØ –ö–û–ù–ö–†–ï–¢–ù–´–ï –°–û–í–ï–¢–´:

1. –ü–ò–¢–ê–ù–ò–ï ({monthly_expenses * 0.25:,.0f} ‚Ç∏):
   ‚Ä¢ –ì–æ—Ç–æ–≤—å—Ç–µ –¥–æ–º–∞ - —ç–∫–æ–Ω–æ–º–∏—è –¥–æ 30%
   ‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –º–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é
   ‚Ä¢ –ü–æ–∫—É–ø–∞–π—Ç–µ –æ–ø—Ç–æ–º

2. –¢–†–ê–ù–°–ü–û–†–¢ ({monthly_expenses * 0.15:,.0f} ‚Ç∏):
   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
   ‚Ä¢ –ö–∞—Ä–ø—É–ª–∏–Ω–≥ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏
   ‚Ä¢ –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–µ–∑–¥–∫–∏

3. –†–ê–ó–í–õ–ï–ß–ï–ù–ò–Ø ({monthly_expenses * 0.1:,.0f} ‚Ç∏):
   ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
   ‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ –≤–µ—á–µ—Ä–∞ –≤–º–µ—Å—Ç–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
   ‚Ä¢ –•–æ–±–±–∏ –≤–º–µ—Å—Ç–æ —à–æ–ø–∏–Ω–≥–∞

üí∞ –û–ë–©–ê–Ø –≠–ö–û–ù–û–ú–ò–Ø: {potential_savings:,.0f} ‚Ç∏/–º–µ—Å—è—Ü = {potential_savings * 12:,.0f} ‚Ç∏/–≥–æ–¥"""

        elif any(word in user_message_lower for word in ['—Å—Ç—Ä–µ—Å—Å', '–Ω–µ—Ä–≤—ã', '—É—Å–ø–æ–∫–æ–∏', '–ø–æ–∫—É–ø–∫']):
            return f"""{user_name}, –≤–º–µ—Å—Ç–æ —à–æ–ø–∏–Ω–≥–∞ –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:

üåô –î–£–•–û–í–ù–´–ï –ü–†–ê–ö–¢–ò–ö–ò:
‚Ä¢ –ù–∞–º–∞–∑ –∏ –¥—É–∞ - —É—Å–ø–æ–∫–∞–∏–≤–∞–µ—Ç –¥—É—à—É
‚Ä¢ –ß—Ç–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞ - –∏—Å—Ç–æ—á–Ω–∏–∫ tranquility
‚Ä¢ –ó–∏–∫—Ä - –ø–æ–º–∏–Ω–∞–Ω–∏–µ –ê–ª–ª–∞—Ö–∞

üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–û–¶–ò–ê–õ–¨–ù–´–ï –ê–ö–¢–ò–í–ù–û–°–¢–ò:
‚Ä¢ –í—Ä–µ–º—è —Å —Å–µ–º—å–µ–π - –±–µ—Å—Ü–µ–Ω–Ω–æ
‚Ä¢ –ü–æ–º–æ—â—å —Ä–æ–¥–∏—Ç–µ–ª—è–º
‚Ä¢ –í—Å—Ç—Ä–µ—á–∏ —Å –¥—Ä—É–∑—å—è–º–∏

üéØ –†–ê–ó–í–ò–¢–ò–ï:
‚Ä¢ –°–ø–æ—Ä—Ç –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –ò–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
‚Ä¢ –í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ

üí° –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç: —ç—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–∞—é—Ç –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –ø–æ–∫—É–ø–æ–∫."""

        elif any(word in user_message_lower for word in ['–∏–Ω–≤–µ—Å—Ç–∏—Ü', '–≤–ª–æ–∂–∏—Ç—å', '–ø—Ä–∏—É–º–Ω–æ–∂']):
            investment_amount = monthly_income * 0.15
            return f"""{user_name}, –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —à–∞—Ä–∏–∞—Ç–æ–º:

üí∞ –î–û–°–¢–£–ü–ù–ê–Ø –°–£–ú–ú–ê: {investment_amount:,.0f} ‚Ç∏/–º–µ—Å—è—Ü

üè¶ –ò–°–õ–ê–ú–°–ö–ò–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´:

1. –ú–£–î–ê–†–ê–ë–ê (–°–±–µ—Ä–µ–∂–µ–Ω–∏—è):
   ‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–∏–±—ã–ª–∏ –±–∞–Ω–∫–∞
   ‚Ä¢ –ë–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
   ‚Ä¢ –û—Ç {max(50000, investment_amount * 3):,.0f} ‚Ç∏

2. –ú–£–®–ê–†–ê–ö–ê (–ë–∏–∑–Ω–µ—Å):
   ‚Ä¢ –°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ  
   ‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–µ–π –∏ —É–±—ã—Ç–∫–æ–≤
   ‚Ä¢ –û—Ç {max(500000, investment_amount * 12):,.0f} ‚Ç∏

3. –ú–£–†–ê–ë–ê–•–ê (–¢–æ—Ä–≥–æ–≤–ª—è):
   ‚Ä¢ –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
   ‚Ä¢ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –Ω–∞—Ü–µ–Ω–∫–∞
   ‚Ä¢ –û—Ç {max(100000, investment_amount * 6):,.0f} ‚Ç∏

üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ù–∞—á–Ω–∏—Ç–µ —Å –ú—É–¥–∞—Ä–∞–±–∞ –Ω–∞ {investment_amount:,.0f} ‚Ç∏/–º–µ—Å—è—Ü"""

        elif any(word in user_message_lower for word in ['–∑–∞–∫—è—Ç', '–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '—Å–∞–¥–∞–∫–∞']):
            zakat_amount = monthly_income * 12 * 0.025  # –ì–æ–¥–æ–≤–æ–π –∑–∞–∫—è—Ç
            return f"""{user_name}, –ø–æ –≤–∞—à–µ–º –¥–æ—Ö–æ–¥—É {monthly_income:,} ‚Ç∏/–º–µ—Å—è—Ü:

üìä –†–ê–°–ß–ï–¢ –ó–ê–ö–Ø–¢–ê:
‚Ä¢ –ì–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥: {monthly_income * 12:,} ‚Ç∏
‚Ä¢ –ì–æ–¥–æ–≤–æ–π –∑–∞–∫—è—Ç: {zakat_amount:,.0f} ‚Ç∏
‚Ä¢ –ï–∂–µ–º–µ—Å—è—á–Ω–æ: {zakat_amount/12:,.0f} ‚Ç∏

üéØ –ö–ê–ö –í–´–ü–õ–ê–ß–ò–í–ê–¢–¨:
1. –ï–∂–µ–≥–æ–¥–Ω–æ –æ–¥–Ω–æ–π —Å—É–º–º–æ–π
2. –ï–∂–µ–º–µ—Å—è—á–Ω–æ –ø–æ {zakat_amount/12:,.0f} ‚Ç∏
3. –í –†–∞–º–∞–¥–∞–Ω –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–æ–∑–¥–∞—è–Ω–∏—è

üìà –ö–£–î–ê –ù–ê–ü–†–ê–í–ò–¢–¨:
‚Ä¢ –ë–ª–∏–∑–∫–∏–º —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º –≤ –Ω—É–∂–¥–µ
‚Ä¢ –ú–µ—Å—Ç–Ω–æ–π –º–µ—á–µ—Ç–∏ –∏–ª–∏ –∏—Å–ª–∞–º—Å–∫–æ–º—É —Ü–µ–Ω—Ç—Ä—É
‚Ä¢ –ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–∞–º

üí° –°–ê–î–ê–ö–ê: –ö—Ä–æ–º–µ –∑–∞–∫—è—Ç–∞, —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è —Å–∞–¥–∞–∫–∞ –æ—á–∏—â–∞–µ—Ç –∏–º—É—â–µ—Å—Ç–≤–æ –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç –±–∞—Ä–∞–∫–∞—Ç."""

        elif any(word in user_message_lower for word in ['–±—é–¥–∂–µ—Ç', '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω', '—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω']):
            return f"""{user_name}, —Å–æ–∑–¥–∞–µ–º –±—é–¥–∂–µ—Ç –ø–æ –∏—Å–ª–∞–º—Å–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º:

üìä –í–ê–® –î–û–•–û–î: {monthly_income:,} ‚Ç∏/–º–µ—Å—è—Ü

üéØ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–û–ï –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï:

1. –û–°–ù–û–í–ù–´–ï –ù–£–ñ–î–´ (50%): {monthly_income * 0.5:,.0f} ‚Ç∏
   ‚Ä¢ –ñ–∏–ª—å–µ, –ø–∏—Ç–∞–Ω–∏–µ, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –∑–¥–æ—Ä–æ–≤—å–µ

2. –°–ë–ï–†–ï–ñ–ï–ù–ò–Ø (20%): {monthly_income * 0.2:,.0f} ‚Ç∏  
   ‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏
   ‚Ä¢ –ß—Ä–µ–∑–≤—ã—á–∞–π–Ω—ã–π —Ñ–æ–Ω–¥

3. –ò–ù–í–ï–°–¢–ò–¶–ò–ò (15%): {monthly_income * 0.15:,.0f} ‚Ç∏
   ‚Ä¢ –†–µ–∞–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å
   ‚Ä¢ –°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ

4. –ó–ê–ö–Ø–¢ (2.5%): {monthly_income * 0.025:,.0f} ‚Ç∏
   ‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

5. –†–ê–ó–í–ò–¢–ò–ï (12.5%): {monthly_income * 0.125:,.0f} ‚Ç∏
   ‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –Ω–∞–≤—ã–∫–∏, –∑–¥–æ—Ä–æ–≤—å–µ

üí° –≠—Ç–æ—Ç –±–∞–ª–∞–Ω—Å –æ–±–µ—Å–ø–µ—á–∏—Ç —É—Å–ø–µ—Ö –≤ –¥—É–Ω—å–µ –∏ –∞—Ö–∏—Ä–∞—Ç–µ!"""

        # –û–±—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        goals_count = len(goals)
        total_goals_amount = sum(goal.get('target_amount', 0) for goal in goals)
        
        return f"""–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º, {user_name}! 

üìä –í–ê–® –§–ò–ù–ê–ù–°–û–í–´–ô –ü–†–û–§–ò–õ–¨:
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {age} –ª–µ—Ç
‚Ä¢ –î–æ—Ö–æ–¥: {monthly_income:,} ‚Ç∏/–º–µ—Å—è—Ü
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ü–µ–ª–∏: {goals_count} –Ω–∞ —Å—É–º–º—É {total_goals_amount:,} ‚Ç∏

üéØ –ü–ï–†–°–û–ù–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:

1. –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–Æ–î–ñ–ï–¢–û–ú:
   –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã {monthly_expenses:,} ‚Ç∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π

2. –î–û–°–¢–ò–ñ–ï–ù–ò–ï –¶–ï–õ–ï–ô:
   –ï–∂–µ–º–µ—Å—è—á–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ {max(monthly_income * 0.2, total_goals_amount/60):,.0f} ‚Ç∏

3. –ò–°–õ–ê–ú–°–ö–ò–ï –ò–ù–í–ï–°–¢–ò–¶–ò–ò:
   –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –ú—É–¥–∞—Ä–∞–±–∞ –Ω–∞ {monthly_income * 0.15:,.0f} ‚Ç∏/–º–µ—Å—è—Ü

4. –°–û–¶–ò–ê–õ–¨–ù–ê–Ø –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–¨:
   –í—ã–¥–µ–ª—è–π—Ç–µ {monthly_income * 0.025:,.0f} ‚Ç∏ –Ω–∞ –∑–∞–∫—è—Ç

üí° –ß–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –º–æ–≥—É –ø–æ–º–æ—á—å –≤ –≤–∞—à–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?"""

    def create_financial_plan(self, user_profile: Dict[str, Any], goals: List[Dict]) -> Dict[str, Any]:
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏—Å–ª–∞–º—Å–∫–æ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞"""
        monthly_income = user_profile.get('monthly_income', 0)
        monthly_expenses = user_profile.get('monthly_expenses', 0)
        age = user_profile.get('age', 0)
        
        # –†–∞—Å—á–µ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        total_goals_amount = sum(goal.get('target_amount', 0) for goal in goals)
        avg_goal_timeline = sum(goal.get('timeline_months', 12) for goal in goals) / max(len(goals), 1)
        monthly_savings_needed = total_goals_amount / avg_goal_timeline if avg_goal_timeline > 0 else 0
        
        plan = {
            "monthly_plan": {
                "essential_spending": monthly_income * 0.5,
                "current_expenses": monthly_expenses,
                "savings": min(monthly_income * 0.2, monthly_savings_needed),
                "investments": monthly_income * 0.15,
                "charity": monthly_income * 0.025,
                "personal_development": monthly_income * 0.125
            },
            "recommendations": [
                f"–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã —Å {monthly_expenses:,} ‚Ç∏ –¥–æ {monthly_income * 0.5:,.0f} ‚Ç∏",
                f"–¶–µ–ª–µ–≤—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è: {monthly_savings_needed:,.0f} ‚Ç∏/–º–µ—Å—è—Ü –¥–ª—è {len(goals)} —Ü–µ–ª–µ–π",
                f"–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ {monthly_income * 0.15:,.0f} ‚Ç∏/–º–µ—Å—è—Ü –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ–∫—Ç–æ—Ä",
                f"–í—ã–¥–µ–ª—è–π—Ç–µ {monthly_income * 0.025:,.0f} ‚Ç∏/–º–µ—Å—è—Ü –Ω–∞ –∑–∞–∫—è—Ç"
            ],
            "islamic_products": ["–ú—É–¥–∞—Ä–∞–±–∞ –°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π", "–ú—É—Ä–∞–±–∞—Ö–∞ –ñ–∏–ª—å–µ", "–ú—É—à–∞—Ä–∞–∫–∞ –ë–∏–∑–Ω–µ—Å"],
            "risk_assessment": user_profile.get('risk_profile', 'moderate'),
            "timeline_analysis": f"–í {age} –ª–µ—Ç —É –≤–∞—Å –æ—Ç–ª–∏—á–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —Ä–æ—Å—Ç–∞. –° –¥–æ—Ö–æ–¥–æ–º {monthly_income:,} ‚Ç∏ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–µ–π –∑–∞ {avg_goal_timeline:.0f} –º–µ—Å—è—Ü–µ–≤ –ø—Ä–∏ —Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ –∏—Å–ª–∞–º—Å–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º."
        }
        
        return plan

    def analyze_spending_habits(self, transactions: List[Dict], user_profile: Dict) -> Dict[str, Any]:
        """–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–≤—ã—á–µ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ —Å –∏—Å–ª–∞–º—Å–∫–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–æ–π"""
        monthly_income = user_profile.get('monthly_income', 0)
        monthly_expenses = user_profile.get('monthly_expenses', 0)
        
        analysis = {
            "spending_analysis": {
                "monthly_income": monthly_income,
                "monthly_expenses": monthly_expenses,
                "savings": monthly_income - monthly_expenses,
                "savings_rate": (monthly_income - monthly_expenses) / monthly_income if monthly_income > 0 else 0,
                "essential_spending": monthly_expenses * 0.6,
                "discretionary_spending": monthly_expenses * 0.4
            },
            "habits_to_improve": [
                f"–°–æ–∫—Ä–∞—Ç–∏—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ {monthly_expenses - monthly_income * 0.5:,.0f} ‚Ç∏ –¥–ª—è –±–∞–ª–∞–Ω—Å–∞",
                "–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∫—Ä—É–ø–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –∏—Å–ª–∞–º—Å–∫–æ–º—É –±—é–¥–∂–µ—Ç—É",
                "–£–≤–µ–ª–∏—á—å—Ç–µ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∑–Ω–æ—Å—ã –¥–æ 2.5% –æ—Ç –¥–æ—Ö–æ–¥–∞"
            ],
            "islamic_recommendations": [
                f"–í—ã–¥–µ–ª—è–π—Ç–µ {monthly_income * 0.025:,.0f} ‚Ç∏ –Ω–∞ –∑–∞–∫—è—Ç –µ–∂–µ–º–µ—Å—è—á–Ω–æ",
                "–ò–∑–±–µ–≥–∞–π—Ç–µ –∏–∑–ª–∏—à–µ—Å—Ç–≤ (–∏—Å—Ä–∞—Ñ) –≤ —Ä–∞—Å—Ö–æ–¥–∞—Ö –Ω–∞ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
                "–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ–∫—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏–∫–∏ –≤–º–µ—Å—Ç–æ —Å–ø–µ–∫—É–ª—è—Ü–∏–π"
            ],
            "charity_suggestions": [
                f"–†–µ–≥—É–ª—è—Ä–Ω–∞—è —Å–∞–¥–∞–∫–∞ –æ—Ç {monthly_income * 0.01:,.0f} ‚Ç∏/–º–µ—Å—è—Ü",
                "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ—Å—Ç–Ω—ã—Ö –º–µ—á–µ—Ç–µ–π –∏ –∏—Å–ª–∞–º—Å–∫–∏—Ö —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π",
                "–ü–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è —á–ª–µ–Ω–∞–º –æ–±—â–∏–Ω—ã"
            ],
            "stress_alternatives": [
                "–ù–∞–º–∞–∑ –∏ –¥—É–∞ –¥–ª—è –¥—É—Ö–æ–≤–Ω–æ–≥–æ —É—Å–ø–æ–∫–æ–µ–Ω–∏—è",
                "–ß—Ç–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞ –∏ –∏—Å–ª–∞–º—Å–∫–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã", 
                "–°–µ–º–µ–π–Ω–æ–µ –≤—Ä–µ–º—è –∏ –æ–±—â–µ–Ω–∏–µ —Å –±–ª–∏–∑–∫–∏–º–∏",
                "–ü—Ä–æ–≥—É–ª–∫–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                "–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ –∏ –ø–æ–º–æ—â—å –¥—Ä—É–≥–∏–º"
            ]
        }
        
        return analysis

    def recommend_products(self, user_goals: List[Dict], user_profile: Dict) -> List[Dict[str, Any]]:
        """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –∏—Å–ª–∞–º—Å–∫–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π"""
        monthly_income = user_profile.get('monthly_income', 0)
        recommended_products = []
        
        # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        recommended_products.append({
            "product_id": "mudaraba_savings",
            "name": "–ú—É–¥–∞—Ä–∞–±–∞ –°–±–µ—Ä–µ–≥–∞—Ç–µ–ª—å–Ω—ã–π", 
            "type": "deposit",
            "suitable_for": "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è",
            "min_amount": max(50000, monthly_income * 0.1),
            "max_amount": 10000000,
            "description": "–£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–∏–±—ã–ª–∏ –±–∞–Ω–∫–∞ –±–µ–∑ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ü–µ–ª–∏.",
            "sharia_compliant": True,
            "estimated_monthly": monthly_income * 0.15,
            "features": ["–£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–∏–±—ã–ª–∏", "–ë–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞", "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞—Ä–∏–∞—Ç—É", "–ì–∏–±–∫–∏–µ –≤–∑–Ω–æ—Å—ã"]
        })
        
        for goal in user_goals:
            goal_amount = goal.get('target_amount', 0)
            timeline = goal.get('timeline_months', 12)
            category = goal.get('category', 'other')
            monthly_saving = goal_amount / timeline if timeline > 0 else 0
            
            if category == 'housing' and goal_amount > 1000000:
                recommended_products.append({
                    "product_id": "murabaha_housing",
                    "name": "–ú—É—Ä–∞–±–∞—Ö–∞ –ñ–∏–ª—å–µ",
                    "type": "credit",
                    "suitable_for": "–ü–æ–∫—É–ø–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏",
                    "min_amount": 1000000,
                    "max_amount": 50000000,
                    "description": f"–§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–∞—Ü–µ–Ω–∫–æ–π –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∂–∏–ª—å—è –∑–∞ {goal_amount:,} ‚Ç∏. –ë–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤, –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è.",
                    "sharia_compliant": True,
                    "estimated_monthly": monthly_saving,
                    "features": ["–ë–µ–∑ —Ä–∏–±–∞", "–ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –Ω–∞—Ü–µ–Ω–∫–∞", f"–†–∞—Å—Å—Ä–æ—á–∫–∞ –¥–æ {timeline} –º–µ—Å—è—Ü–µ–≤", "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –¢–ê–ö–ê–§–£–õ"]
                })
            
            elif category == 'business' and goal_amount > 500000:
                recommended_products.append({
                    "product_id": "musharaka_business", 
                    "name": "–ú—É—à–∞—Ä–∞–∫–∞ –ë–∏–∑–Ω–µ—Å",
                    "type": "investment",
                    "suitable_for": "–ù–∞—á–∞–ª–æ –∏–ª–∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–∏–∑–Ω–µ—Å–∞",
                    "min_amount": 500000,
                    "max_amount": 50000000,
                    "description": f"–°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ —Å –±—é–¥–∂–µ—Ç–æ–º {goal_amount:,} ‚Ç∏. –†–µ–∞–ª—å–Ω–æ–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø—Ä–∏–±—ã–ª–∏.",
                    "sharia_compliant": True,
                    "estimated_monthly": monthly_saving,
                    "features": ["–°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ", "–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–æ–≤", "–ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"]
                })
            
            elif category == 'hajj':
                recommended_products.append({
                    "product_id": "hajj_savings",
                    "name": "–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ –Ω–∞ –•–∞–¥–∂",
                    "type": "special",
                    "suitable_for": "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –•–∞–¥–∂—É",
                    "min_amount": 50000,
                    "max_amount": goal_amount,
                    "description": f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è {goal_amount:,} ‚Ç∏ –Ω–∞ –±–ª–∞–≥–æ—Ä–æ–¥–Ω—É—é —Ü–µ–ª—å –•–∞–¥–∂–∞. –û—Ç–¥–µ–ª—å–Ω—ã–π —Å—á–µ—Ç —Å –¥—É—Ö–æ–≤–Ω—ã–º —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º.",
                    "sharia_compliant": True,
                    "estimated_monthly": monthly_saving,
                    "features": ["–¶–µ–ª–µ–≤–æ–π —Å—á–µ—Ç", "–î—É—Ö–æ–≤–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –•–∞–¥–∂—É", "–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π"]
                })
        
        return recommended_products

    def chat_with_context(self, user_message: str, user_context: Dict[str, Any]) -> Dict[str, Any]:
        """–£–º–Ω—ã–π —á–∞—Ç —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        # –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –æ—Ç–≤–µ—Ç—ã —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π
        ai_response = self.get_mock_response(user_message, user_context)
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        recommendations = self._extract_recommendations(ai_response)
        products = self.recommend_products(user_context.get('goals', []), user_context)
        
        return {
            "response": ai_response,
            "recommendations": recommendations,
            "suggested_products": products[:3],
            "message_type": "financial_advice"
        }

    def _extract_recommendations(self, response: str) -> List[str]:
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏–∑ –æ—Ç–≤–µ—Ç–∞"""
        recommendations = []
        lines = response.split('\n')
        
        for line in lines:
            line = line.strip()
            if (line.startswith('‚Ä¢ ') or line.startswith('- ') or 
                (line.startswith('1. ') or line.startswith('2. ') or line.startswith('3. ')) and
                len(line) < 200 and not line.startswith('üìä') and not line.startswith('üéØ')):
                clean_line = line[2:].strip() if line.startswith('‚Ä¢ ') else line[3:].strip()
                if clean_line and len(clean_line) > 10:
                    recommendations.append(clean_line)
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, —Å–æ–∑–¥–∞–µ–º –æ–±—â–∏–µ
        if not recommendations:
            recommendations = [
                "–°–æ–∑–¥–∞–π—Ç–µ –±—é–¥–∂–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –∏—Å–ª–∞–º—Å–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è",
                "–†–µ–≥—É–ª—è—Ä–Ω–æ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ 20% –¥–æ—Ö–æ–¥–∞ –Ω–∞ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è",
                "–í—ã–¥–µ–ª—è–π—Ç–µ 2.5% –Ω–∞ –∑–∞–∫—è—Ç –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è –∏–º—É—â–µ—Å—Ç–≤–∞"
            ]
        
        return recommendations[:4]

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
islamic_ai_service = IslamicAIService()